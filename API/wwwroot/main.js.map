{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/text-inputs/text-inputs.component.html","./src/app/_forms/text-inputs/text-inputs.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { error } from 'protractor';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css'],\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors:string[]=[];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n        this.validationErrors=error;\n      }\n    );\n  }\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button>\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","<div class=\"form-group\">\n    <input [class.is-invalid]='ngControl.touched && ngControl.invalid' type=\"{{type}}\" class=\"form-control\"\n        [formControl]=\"ngControl.control\" placeholder=\"{{label}}\">\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">{{label}} must be at least\n        {{ngControl.control.errors.minlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">{{label}} must be at most\n        {{ngControl.control.errors.maxlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">Password do not match</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-inputs',\n  templateUrl: './text-inputs.component.html',\n  styleUrls: ['./text-inputs.component.css'],\n})\nexport class TextInputsComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","<div class=\"form-group\">\n    <input type=\"text\" [class.is-invalid]='ngControl.touched && ngControl.invalid' class='form-control'\n        [formControl]='ngControl.control' placeholder=\"{{label}}\" bsDatepicker [bsConfig]='bsConfig'\n        [maxDate]='maxDate'>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY',\n    };\n  }\n\n  writeValue(obj: any): void {}\n\n  registerOnChange(fn: any): void {}\n\n  registerOnTouched(fn: any): void {}\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: [\n        '',\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchValues('password')],\n      ],\n    });\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n      }\n    );\n  }\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" formControlName=\"gender\" value=\"male\"> Male\n    </label>\n    <label class=\"radio-inline\">\n      <input type=\"radio\" formControlName=\"gender\" value=\"female\" class=\"ml-3\"> Female\n    </label>\n  </div>\n  <app-text-inputs [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-text-inputs>\n  <app-text-inputs [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"KnownAs\"'></app-text-inputs>\n  <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [label]='\"Date Of Birth\"' [maxDate]='maxDate'>\n  </app-date-input>\n  <app-text-inputs [formControl]='registerForm.controls[\"city\"]' [label]='\"City\"'></app-text-inputs>\n  <app-text-inputs [formControl]='registerForm.controls[\"country\"]' [label]='\"Country\"'></app-text-inputs>\n  <app-text-inputs [formControl]='registerForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"password\"'>\n  </app-text-inputs>\n  <app-text-inputs [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"'>\n  </app-text-inputs>\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success mr-2\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">\n      Cancel\n    </button>\n  </div>\n</form>","<div class=\"card\">\r\n    <div class=\"card-body\" #scrollMe style=\"overflow-y: auto;height: 535px;\" [scrollTop]=\"scrollMe.scrollHeight\">\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No Messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul *ngIf=\"(messageService.messageThread$ | async)?.length > 0\" class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-right\">\r\n                        <img src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" alt=\"{{message.senderUsername}}\"\r\n                            class=\"rounded-circle\">\r\n                    </span>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\"> {{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\"\r\n                                    *ngIf=\"!message.dateRead && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\"\r\n                                    *ngIf=\"message.dateRead && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" name=\"messageContent\" required [(ngModel)]=\"messageContent\"\r\n                    class=\"form-control input-sm\" placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">\r\n                        Send\r\n                        <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      })\r\n      .finally(() => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n}\r\n","<div class='row'>\n    <div class='col-sm-2' *ngFor='let photo of photos'>\n        <h4>{{photo.username}}</h4>\n        <img src='{{photo.url}}' class='img-thumbnail p-1' alt='{{photo.username}}'>\n        <div class='text-center'>\n            <button class='btn btn-sm btn-success mr-1' (click)='approvePhoto(photo.id)'>Approve</button>\n            <button class='btn btn-sm btndanger' (click)='rejectPhoto(photo.id)'>Reject</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css'],\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: Photo[];\n\n  constructor(private adminService: AdminService) {}\n\n  ngOnInit(): void {\n    this.getPhotosForApproval();\n  }\n\n  getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe((photos) => {\n      this.photos = photos;\n    });\n  }\n\n  approvePhoto(photoId) {\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(\n        this.photos.findIndex((p) => p.id === photoId),\n        1\n      );\n    });\n  }\n\n  rejectPhoto(photoId) {\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(\n        this.photos.findIndex((p) => p.id === photoId),\n        1\n      );\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not Found</h1>\n    <button class=\"btn btn-lg btn-info\" routerLink=\"/\">Return to home page</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n<p class=\"font-weight-bold\">Note: If you are seeing this then Angular probably is not to blame!</p>\n<p>What to do next?</p>\n<ol>\n    <li>Open the chrome dev tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - make sure it is correct</li>\n    <li>Reproduce the error i Postman - if we see the same response, then the issue is not with the angular</li>\n</ol>\n<p>Following is the stack trace - this is where your investigation should start!</p>\n<code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css'],\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {}\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]',\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n    });\n  }\n  ngOnInit(): void {\n    //clear view if no roles\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user?.roles.some((r) => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255, 255, 255, 0)',\n      color: '#333333',\n    });\n  }\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" class=\"text-center\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\n        </div>\n    </div>\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event:boolean){\n    this.registerMode=event;\n  }\n}\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (currentUser = user));\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n","<div class=\"row mb-4\">\n    <div class=\"btn-group\" name=\"container\">\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length===0\">\n    <h3>No Messages</h3>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer;\" [hidden]=\"loading\">\n        <tr>\n            <th style=\"width: 40%;\"></th>\n            <th style=\"width: 20%;\">From / To</th>\n            <th style=\"width: 20%;\">Sent / Received</th>\n            <th style=\"width: 20%;\"></th>\n        </tr>\n        <tr *ngFor=\"let message of messages\"\n            routerLink='{{container === \"Outbox\" ? \"/members/\" + message.recipientUsername : \"/members/\" + message.senderUsername}}'\n            [queryParams]='{tab: 4}'>\n            <td>{{message.content}}</td>\n            <td>\n                <div *ngIf='container === \"Outbox\"'>\n                    <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" alt=\"{{message.recipientUsername}}\">\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\n                </div>\n                <div *ngIf='container !== \"Outbox\"'>\n                    <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                        alt=\"{{message.senderUsername}}\">\n                    <strong>{{message.senderUsername | titlecase}}</strong>\n                </div>\n            </td>\n            <td>{{message.messageSent | timeago}}</td>\n            <td>\n                <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessae(message.id)\">Delete</button>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(\n    private messageService: MessageService,\n    private confirmService: ConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((response) => {\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n      });\n  }\n\n  deleteMessae(id: number) {\n    this.confirmService\n      .confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe((result) => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() =>\n            this.messages.splice(\n              this.messages.findIndex((m) => m.id === id),\n              1\n            )\n          );\n        }\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgbModule,\n    TabsModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    NgbModule,\n    TabsModule,\n    ToastrModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof error.error === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Photo } from '../_models/photo';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(\n      this.baseUrl + 'admin/users-with-roles'\n    );\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(\n      this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles,\n      {}\n    );\n  }\n\n  getPhotosForApproval() {\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\n  }\n  approvePhoto(photoId: number) {\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n  rejectPhoto(photoId: number) {\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css'],\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-diaog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roles: [\n          ...values.filter((el) => el.checked === true).map((el) => el.name),\n        ],\n      };\n      if (rolesToUpdate) {\n        this.adminService\n          .updateUserRoles(user.username, rolesToUpdate.roles)\n          .subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n      }\n    });\n  }\n\n  private getRolesArray(user: User) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach((role) => {\n      let isMatch = false;\n      for (const userRole of user.roles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n    return roles;\n  }\n}\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width: 30%;\">Username</th>\n            <th style=\"width: 40%;\">Active roles</th>\n            <th style=\"width: 30%;\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\n        </tr>\n    </table>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NgxGalleryAnimation,\n  NgxGalleryImage,\n  NgxGalleryOptions,\n} from '@kolkov/ngx-gallery';\nimport { NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  active = 1;\n  member: Member;\n  messages: Message[] = [];\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  user: User;\n\n  constructor(\n    public presence: PresenceService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      params.tab ? this.selectTab(4) : this.selectTab(1);\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService\n      .getMessageThread(this.member.userName)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.active = tabId;\n    // if (this.messages.length === 0) {\n    //   this.loadMessages();\n    // }\n    if (tabId === 4 && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.userName);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  onNavChange(changeEvent: NgbNavChangeEvent) {\n    if (changeEvent.nextId === 4 && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.userName);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" srcset=\"\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.userName)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location: </strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age: </strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active: </strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member Since: </strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button class=\"btn btn-success\" (click)=\"selectTab(4)\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"member-tabset\">\r\n\r\n            <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\" [(activeId)]=\"active\" (navChange)=\"onNavChange($event)\">\r\n                <li [ngbNavItem]=\"1\">\r\n                    <a ngbNavLink>About {{member.knownAs}}</a>\r\n                    <ng-template ngbNavContent>\r\n                        <h4>Descrption</h4>\r\n                        <p>{{member.introduction}}</p>\r\n                        <h4>Looking For</h4>\r\n                        <p>{{member.lookingFor}}</p>\r\n                    </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"2\">\r\n                    <a ngbNavLink>Interests</a>\r\n                    <ng-template ngbNavContent>\r\n                        <h4>Interests</h4>\r\n                        <p>{{member.interests}}</p>\r\n                    </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"3\">\r\n                    <a ngbNavLink>Photos</a>\r\n                    <ng-template ngbNavContent>\r\n                        <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"\r\n                            style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n                    </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"4\">\r\n                    <a ngbNavLink>Messages</a>\r\n                    <ng-template ngbNavContent>\r\n                        <app-member-messages [username]=\"member.userName\"></app-member-messages>\r\n                    </ng-template>\r\n\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n        <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr:ToastrService){}\n  canActivate(): Observable<boolean>{\n    return this.accountService.currentUser$.pipe(\n      map(user=>{\n        if(user)return true;\n        this.toastr.error('You shall not pass!');\n      })\n    );\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber: number, pageSize: number, container: string) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', { recipientUsername: username, content })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label>Age from: </label>\n            <input type=\"number\" name=\"minAge\" class=\"form-control ml-1\" style=\"width: 70px;\"\n                [(ngModel)]=\"userParams.minAge\">\n        </div>\n        <div class=\"form-group px-2\">\n            <label>Age to: </label>\n            <input type=\"number\" name=\"maxAge\" class=\"form-control ml-1\" style=\"width: 70px;\"\n                [(ngModel)]=\"userParams.maxAge\">\n        </div>\n        <div class=\"form-group px-2\">\n            <label>Show: </label>\n            <select name=\"gender\" style=\"width: 130px;\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.gender\">\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary ml-1\">Apply Filers</button>\n        <button (click)=\"resetFilters()\" type=\"submit\" class=\"btn btn-info ml-1\">Reset Filers</button>\n\n        <div class=\"col\">\n            <div class=\"btn-group float-right\">\n                <button type=\"button\" class=\"btn btn-primary\" name=\"orderBy\" (click)=\"loadMembers()\"\n                    btnRadio='lastActive' [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n                <button type=\"button\" class=\"btn btn-primary\" name=\"orderBy\" (click)=\"loadMembers()\" btnRadio='created'\n                    [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let member of members\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    });\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\n  <h3>Loading...</h3>\n</ngx-spinner>\n\n<app-nav></app-nav>\n\n<div class=\"container\" style=\"margin-top: 100px;padding-bottom: 15px;\">\n  <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  constructor(\n    private http: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(\n      this.baseUrl + 'users',\n      params,\n      this.http\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((member: Member) => member.userName === username);\n\n    if (member) {\n      return of(member);\n    }\n\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    );\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId, {});\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(\n      this.baseUrl + 'likes',\n      params,\n      this.http\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputsComponent } from './_forms/text-inputs/text-inputs.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputsComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach((p) => {\n        if (p.isMain) p.isMain = false;\n        if (p.id === photo.id) p.isMain = true;\n      });\n    });\n  }\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter((x) => x.id != photoId);\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\" [class.not-approved]=\"!photo.isApproved\">\n        <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\n            <span class=\"text-danger\">Awaiting approval</span>\n        </div>\n        <div class=\"text-center\">\n            <button class=\"btn btn-sm\" [disabled]=\"photo.isMain || !photo.isApproved\" (click)=\"setMainPhoto(photo)\"\n                [ngClass]='photo.isMain? \"btn-success active\" : \"btn-outline-success\"'>Main</button>\n            <button class=\"btn btn-sm btn-danger\" [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\"><i\n                    class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n\n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\" (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />PP\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Member } from '../_models/member';\nimport { MembersService } from '../_services/members.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberDetailedResolver implements Resolve<Member> {\n  constructor(private memberService: MembersService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate==='liked'? 'Members I like': 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I\n                like</button>\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who\n                like me</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css'],\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) {}\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\n      .subscribe((response) => {\n        this.members = response.result;\n        this.pagination = response.pagination;\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\">Dating App</a>\n\n    <ul class=\"navbar-nav mr-auto\">\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Matches</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\">Lists</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\">Messages</a>\n        </li>\n        <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n        </li>\n      </ng-container>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\">Errors</a>\n      </li>\n    </ul>\n\n    <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" ngbDropdown>\n      <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\n      <a class=\"dropdown-toggle text-light ml-2\" ngbDropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\n      <div class=\"dropdown-menu mt-3\" ngbDropdownMenu>\n        <a routerLink=\"/member/edit\" class=\"dropdown-item\" ngbDropdownItem>Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\" ngbDropdownItem>Logout</a>\n      </div>\n    </div>\n\n    <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"login()\" autocomplete=\"off\">\n      <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"search\"\n        placeholder=\"Username\" />\n      <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" type=\"password\"\n        placeholder=\"Password\" />\n      <button class=\"btn btn-success my-2 my-sm-2\" type=\"submit\">\n        Login\n      </button>\n    </form>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(\n    public accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {}\n\n  login() {\n    this.accountService.login(this.model).subscribe((response) => {\n      this.router.navigateByUrl('/members');\n    });\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(\n    private memberService: MembersService,\n    private toastr: ToastrService,\n    public presence: PresenceService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.userName).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    });\n  }\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button routerLink=\"/members/{{member.userName}}\" class=\"btn btn-primary\"><i\n                        class=\"fa fa-user\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" (click)=\"addLike(member)\"><i class=\"fa fa-heart\"></i></button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" routerLink=\"/members/{{member.userName}}\" [queryParams]='{tab: 4}'><i\n                        class=\"fa fa-envelope\"></i></button>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.userName)\">\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            {{member.knownAs}}, {{member.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toatr: ToastrService, private router: Router) {}\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([\n          ...usernames.filter((x) => x !== username),\n        ]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toatr\n        .info(knownAs + ' has sent you a new message!')\n        .onTap.pipe(take(1))\n        .subscribe(() =>\n          this.router.navigateByUrl('/members/' + username + '?tab=4')\n        );\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch((error) => console.log(error));\n  }\n}\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 6;\r\n  orderBy='lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n                <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member: Member;\n  user: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\n    $event: any\n  ) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toastr: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information: </strong>You have made changes any unsaved changes will be lost\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" srcset=\"\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location: </strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age: </strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active: </strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member Since: </strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">Save\n                    Changes</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\"\n                        rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\"\n                        rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City: </label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"city\">Country: </label>\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n\n            </tab>\n            <tab heading='Edit Photos'>\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(\r\n  url: string,\r\n  params: any,\r\n  http: HttpClient\r\n) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http\r\n    .get<T>(url, { observe: 'response', params })\r\n    .pipe(\r\n      map((response) => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(\r\n            response.headers.get('Pagination')\r\n          );\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n      },\n      {\n        path: 'members/:username',\n        component: MemberDetailComponent,\n        resolve: { member: MemberDetailedResolver },\n      },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      { path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard] },\n    ],\n  },\n  { path: 'errors', component: TestErrorsComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { subscribeOn } from 'rxjs/operators';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalServices: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModalRef = this.modalServices.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\" class=\"form-check-input\" [checked]=\"role.checked\" value=\"role.name\"\n                (change)=\"role.checked = !role.checked\" [disabled]=\"role.name === 'Admin' && user.username === 'admin'\">\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}